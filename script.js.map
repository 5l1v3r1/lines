{
  "version": 3,
  "file": "script.js",
  "sourceRoot": "",
  "sources": [
    "script.coffee"
  ],
  "names": [],
  "mappings": ";AAAA;EAAA;;;;;;AAAA,MAAA,GAAA,EAAA,QAAA,EAAA,YAAA,EAAA,SAAA,EAAA,IAAA,EAAA;;EACA,GAAA,GAAM,QAAQ,CAAC,cAAT,CAAwB,UAAxB;;EAON,YAAA,GAAe,QAAA,CAAC,KAAD,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,CAAA;AACb,QAAA;IAAA,UAAA,GAAa,QAAQ,CAAC,aAAT,CAAuB,GAAvB;IACb,UAAU,CAAC,SAAX,GAAuB;IACvB,UAAU,CAAC,KAAX,GAAmB,CAAA,sBAAA,CAAA,CAAyB,CAAzB,CAA2B,EAA3B,CAAA,CAA+B,CAA/B,CAAiC,EAAjC,CAAA,CAAqC,CAArC,CAAuC,CAAvC;IACnB,UAAU,CAAC,KAAK,CAAC,KAAjB,GAAyB,KAAA,GAAQ;AACjC,WAAO;EALM;;EAOf,SAAA,GAAY,QAAA,CAAC,MAAD,CAAA;WACV,GAAG,CAAC,WAAJ,CAAgB,MAAhB;EADU;;EAGZ,IAAA,GAAO,QAAA,CAAC,GAAD,EAAM,GAAN,CAAA;AACL,WAAO,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,CAAA,CAAA,GAAgB,GAA3B,CAAA,GAAkC;EADpC,EAlBP;;;EAuBA,UAAA,GAAa,QAAA,CAAA,CAAA;IACX,GACE,CAAC,UAAW,CAAA,CAAA,CACZ,CAAC,MAFH,CAAA;WAGA,QAAA,CAAS,CAAT;EAJW,EAvBb;;;EA8BA,QAAA,GAAW,QAAA,CAAC,MAAD,CAAA;AACT,QAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,OAAA,EAAA;IAAA,KAAA,GAAQ;AACR;WAAM,KAAA,KAAS,MAAf;MACE,KAAA,GAAQ,IAAA,CAAK,EAAL,EAAS,CAAT;MACR,CAAA,GAAI,IAAA,CAAK,GAAL,EAAU,CAAV;MACJ,CAAA,GAAI,IAAA,CAAK,GAAL,EAAU,CAAV;MACJ,CAAA,GAAI,IAAA,CAAK,GAAL,EAAU,CAAV;MACJ,IAAA,GAAO,YAAA,CAAa,KAAb,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B;MACP,SAAA,CAAU,IAAV;mBACA,KAAA;IAPF,CAAA;;EAFS,EA9BX;;;;;;;EA8CA,QAAA,CAAS,IAAA,CAAK,EAAL,EAAS,CAAT,CAAT,CAAA,IAA0B,WAAA,CAAa,UAAb,EAAyB,GAAzB;;EAE1B;AAhDA",
  "sourcesContent": [
    "# The root element where everything spawns within\napp = document.getElementById('app-root')\n\n###\n  r = red\n  g = green\n  b = blue\n###\ngenerateNode = (width, r, g, b) ->\n  objectNode = document.createElement('p')\n  objectNode.className = 'round container'\n  objectNode.style = \"border: 2px solid rgb(#{r}, #{g}, #{b})\";\n  objectNode.style.width = width + 'rem';\n  return objectNode\n\ninjectDom = (object) ->\n  app.appendChild(object)\n\nrand = (max, min) ->\n  return Math.floor(Math.random() * max) + min\n\n\n# Remove the first child and generate a new one\nregenerate = ->\n  app\n    .childNodes[0]\n    .remove()\n  generate(2)\n\n# Generates individual lines\ngenerate = (amount) ->\n  count = 1\n  while count != amount\n    width = rand(24, 1)\n    r = rand(255, 2)\n    g = rand(255, 2)\n    b = rand(255, 2)\n    node = generateNode(width, r, g, b)\n    injectDom(node)\n    count++\n\n###\nWhen the windows first loads generate a full set of random\nlines then start remove the first child and inject a freshly\ngenerated line\n###\ngenerate(rand(12, 6)) and setInterval( regenerate, 250 )\n\n`//# sourceMappingURL=script.js.map`\n"
  ]
}